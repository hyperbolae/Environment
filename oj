#!/bin/bash
set -e

function usage() {
	echo 'Usage: oj <file> [-v] [-t <tle>]'
	exit -1
}

if [[ $# -eq 0 ]]; then usage; fi

tle=-1
vt=0

while getopts :vt: opt ${@:2}; do
	case $opt in
	v) 		vt=1 	
			;;
	t) 		tle=$OPTARG 
			;;
	*) 		usage 	
			;;
	esac
done

fn=${1%.*}
fn=${fn##*/}
ext=${1##*.}

# No extension specify
if [[ -z $ext ]]; then echo 'No extension found'; exit -1; fi
# Empty source filename
if [[ -z $fn ]]; then usage; fi

function require_start_time() {
	if [[ $vt -eq 1 ]]; then start_time=$(date +%s%N); fi
}

function require_timeout() {
	if [[ $tle == "-1" ]]; then
		$1
	else 
		timeout $tle $1 || {
			echo -e "\e[101mTime Limit Exceed!\e[0m"
			exit -1
		}
	fi
}

case $ext in
    c)    	gcc -o "/tmp/$fn" -O2 "$1"
		  	require_start_time
			require_timeout "/tmp/$fn" 
			;;
    cpp)  	g++ -o "/tmp/$fn" -O2 "$1"
			require_start_time 
			require_timeout "/tmp/$fn"
			;;
    java) 	javac -d /tmp/ $1
			require_start_time
			require_timeout "java -cp /tmp/ $fn"
			;;
    py)   	require_start_time
			require_timeout "python $1" 
			;;
    *)    	echo Unknown extension: "$ext"
			exit -1
			;;
esac

if [[ $vt -eq 1 ]]; then 
	end_time=$(date +%s%N);
	cost=$((($end_time - $start_time)/1000000))
	echo "$cost ms"
fi

